# Generated by Selenium IDE
import pytest
import os
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test03GDPendenciasArquivamento():
  def setup_method(self, method):
    if ("LOCAL" == os.environ["SELENIUMTEST_MODALIDADE"]):
        self.driver = webdriver.Chrome()
    else:
        self.driver = webdriver.Remote(command_executor=os.environ["SELENIUMTEST_SELENIUMHOST_URL"], desired_capabilities=DesiredCapabilities.CHROME)

    if ((not 'maximizar_screen' in os.environ) or os.environ['maximizar_screen'] == 'true'):
        self.driver.maximize_window()

    self.driver.implicitly_wait(5)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()  
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_020PendenciasArquivamentoReabrirMassa(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivista01")
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "Acessar").click()
    self.driver.find_element(By.LINK_TEXT, "Pendências de Arquivamento").click()
    self.driver.find_element(By.ID, "imgInfraCheck").click()
    self.driver.find_element(By.ID, "sbmReabrir").click()
    self.driver.switch_to.alert.accept()
    time.sleep(10)
    WebDriverWait(self.driver, 180000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".infraCaption")))
    assert self.driver.find_element(By.CSS_SELECTOR, ".infraCaption").text == "Lista de Pendências de Arquivamento (13 registros):"
    self.driver.find_element(By.LINK_TEXT, "Controle de Processos").click()
    self.driver.find_element(By.ID, "imgGeradosCheck").click()
    self.driver.find_element(By.XPATH, "//img[@title='Concluir Processo nesta Unidade']").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.XPATH, "//div[contains(.,\'Controle\')]")))
  
  def test_030PendenciasArquivamentoReabrirUnico(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivista01")
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "Acessar").click()
    self.driver.find_element(By.LINK_TEXT, "Pendências de Arquivamento").click()
    self.driver.find_element(By.XPATH, "//td[contains(.,\'99993.000001\')]/../td[8]/a[1]").click()
    self.driver.switch_to.alert.accept()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.XPATH, "//a[contains(text(),\'99993\')]")))
    elements = self.driver.find_elements(By.XPATH, "//a[starts-with(.,\'99993.000001\') and contains(.,\'9\')]")
    assert len(elements) == 0
  
  def test_040PendenciasArquivamentoArquivarMassa(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivista01")
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "Acessar").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Pendências de Arquivamento")))
    self.driver.find_element(By.LINK_TEXT, "Pendências de Arquivamento").click()
    self.driver.find_element(By.ID, "imgInfraCheck").click()
    self.driver.find_element(By.ID, "sbmArquivar").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "selJustificativa")))
    dropdown = self.driver.find_element(By.ID, "selJustificativa")
    dropdown.find_element(By.XPATH, "//option[. = 'Justificativa de Arquivamento 01']").click()
    self.driver.find_element(By.ID, "selJustificativa").click()
    dropdown = self.driver.find_element(By.ID, "selCargoFuncao")
    dropdown.find_element(By.XPATH, "//option[. = 'Assessor(a)']").click()
    self.driver.find_element(By.ID, "selCargoFuncao").click()
    self.driver.find_element(By.ID, "pwdSenha").click()
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "sbmSalvar").click()
    time.sleep(10)
    WebDriverWait(self.driver, 180000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".infraCaption")))
    assert self.driver.find_element(By.CSS_SELECTOR, ".infraCaption").text == "Lista de Pendências de Arquivamento (12 registros):"
  
  def test_050PendenciasArquivamentoArquivarUnico(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivista01")
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "Acessar").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Pendências de Arquivamento")))
    self.driver.find_element(By.LINK_TEXT, "Pendências de Arquivamento").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//td[contains(.,\'99993.000056/\')]/../td[8]/a[2]")))
    self.driver.find_element(By.XPATH, "//td[contains(.,\'99993.000056/\')]/../td[8]/a[2]").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "selJustificativa")))
    dropdown = self.driver.find_element(By.ID, "selJustificativa")
    dropdown.find_element(By.XPATH, "//option[. = 'Justificativa de Arquivamento 01']").click()
    self.driver.find_element(By.ID, "selJustificativa").click()
    dropdown = self.driver.find_element(By.ID, "selCargoFuncao")
    dropdown.find_element(By.XPATH, "//option[. = 'Assessor(a)']").click()
    self.driver.find_element(By.ID, "selCargoFuncao").click()
    self.driver.find_element(By.ID, "pwdSenha").click()
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "sbmSalvar").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//a[starts-with(.,\'99993.000057\')]")))
    elements = self.driver.find_elements(By.XPATH, "//a[starts-with(.,\'99993.000056\') and contains(.,\'9\')]")
    assert len(elements) == 0
  
  def test_060ArquivoUnidadeDesarquivarMassa(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivista01")
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "Acessar").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Arquivo da Unidade")))
    self.driver.find_element(By.LINK_TEXT, "Arquivo da Unidade").click()
    self.driver.find_element(By.ID, "imgInfraCheck").click()
    self.driver.find_element(By.ID, "sbmDesarquivar").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "selJustificativa")))
    dropdown = self.driver.find_element(By.ID, "selJustificativa")
    dropdown.find_element(By.XPATH, "//option[. = 'Justificativa de Desarquivamento 02']").click()
    self.driver.find_element(By.ID, "selJustificativa").click()
    dropdown = self.driver.find_element(By.ID, "selCargoFuncao")
    dropdown.find_element(By.XPATH, "//option[. = 'Gestor de Contrato']").click()
    self.driver.find_element(By.ID, "selCargoFuncao").click()
    self.driver.find_element(By.ID, "pwdSenha").click()
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "sbmSalvar").click()
    WebDriverWait(self.driver, 180000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".infraCaption")))
    self.driver.find_element(By.CSS_SELECTOR, ".infraCaption").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".infraCaption").text == "Lista de Processos Arquivados (1 registro):"
  
  def test_070ArquivoUnidadeDesarquivarUnico(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivista01")
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "Acessar").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Arquivo da Unidade")))
    self.driver.find_element(By.LINK_TEXT, "Arquivo da Unidade").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "td .infraImg")))
    self.driver.find_element(By.CSS_SELECTOR, "td .infraImg").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "selJustificativa")))
    dropdown = self.driver.find_element(By.ID, "selJustificativa")
    dropdown.find_element(By.XPATH, "//option[. = 'Justificativa de Desarquivamento 01']").click()
    self.driver.find_element(By.ID, "selJustificativa").click()
    dropdown = self.driver.find_element(By.ID, "selCargoFuncao")
    dropdown.find_element(By.XPATH, "//option[. = 'Gestor de Contrato']").click()
    self.driver.find_element(By.ID, "selCargoFuncao").click()
    self.driver.find_element(By.ID, "pwdSenha").click()
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "sbmSalvar").click()
    time.sleep(10)
    elements = self.driver.find_elements(By.CSS_SELECTOR, "td .infraImg")
    assert len(elements) == 0
  
  def test_080PendenciasArquivamentoArquivarMassa(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivista01")
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "Acessar").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Controle de Processos")))
    self.driver.find_element(By.LINK_TEXT, "Controle de Processos").click()
    self.driver.find_element(By.ID, "imgGeradosCheck").click()
    self.driver.find_element(By.XPATH, "//img[@title='Concluir Processo nesta Unidade']").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Pendências de Arquivamento")))
    self.driver.find_element(By.LINK_TEXT, "Pendências de Arquivamento").click()
    self.driver.find_element(By.ID, "imgInfraCheck").click()
    self.driver.find_element(By.ID, "sbmArquivar").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "selJustificativa")))
    dropdown = self.driver.find_element(By.ID, "selJustificativa")
    dropdown.find_element(By.XPATH, "//option[. = 'Justificativa de Arquivamento 01']").click()
    self.driver.find_element(By.ID, "selJustificativa").click()
    dropdown = self.driver.find_element(By.ID, "selCargoFuncao")
    dropdown.find_element(By.XPATH, "//option[. = 'Assessor(a)']").click()
    self.driver.find_element(By.ID, "selCargoFuncao").click()
    self.driver.find_element(By.ID, "pwdSenha").click()
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "sbmSalvar").click()
    WebDriverWait(self.driver, 180000).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".infraCaption")))
    self.driver.find_element(By.CSS_SELECTOR, ".infraCaption").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".infraCaption").text == "Lista de Pendências de Arquivamento (13 registros):"

  def test_090PendenciasArquivamentoArquivarUnico(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivista01")
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "Acessar").click()
    self.driver.find_element(By.LINK_TEXT, "Pendências de Arquivamento").click()
    self.driver.find_element(By.XPATH, "//td[contains(.,\'99993.000056/\')]/../td[8]/a[2]").click()
    dropdown = self.driver.find_element(By.ID, "selJustificativa")
    dropdown.find_element(By.XPATH, "//option[. = 'Justificativa de Arquivamento 01']").click()
    self.driver.find_element(By.ID, "selJustificativa").click()
    dropdown = self.driver.find_element(By.ID, "selCargoFuncao")
    dropdown.find_element(By.XPATH, "//option[. = 'Assessor(a)']").click()
    self.driver.find_element(By.ID, "selCargoFuncao").click()
    self.driver.find_element(By.ID, "pwdSenha").click()
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
    self.driver.find_element(By.ID, "sbmSalvar").click()
    time.sleep(5)
    elements = self.driver.find_elements(By.XPATH, "//a[starts-with(.,\'99993.000056\') and contains(.,\'9\')]")
    assert len(elements) == 0
  
