# Generated by Selenium IDE
import pytest
import os
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test0270SEIGDDuplicaMassa2():
  def setup_method(self, method):
    if ("LOCAL" == os.environ["SELENIUMTEST_MODALIDADE"]):
        self.driver = webdriver.Chrome()
    else:
        self.driver = webdriver.Remote(command_executor=os.environ["SELENIUMTEST_SELENIUMHOST_URL"], desired_capabilities=DesiredCapabilities.CHROME)

    if ((not 'maximizar_screen' in os.environ) or os.environ['maximizar_screen'] == 'true'):
        self.driver.maximize_window()

    self.driver.implicitly_wait(5)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_01CadastrarProcessosFlood1(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "txtUsuario")))
    self.driver.find_element(By.ID, "txtUsuario").click()
    self.driver.find_element(By.ID, "txtUsuario").send_keys("teste")
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "pwdSenha")))
    self.driver.find_element(By.ID, "pwdSenha").click()
    self.driver.find_element(By.ID, "pwdSenha").send_keys("teste")
    self.driver.find_element(By.ID, "Acessar").click()
    
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".d-none #lnkInfraUnidade")))
    
    e = self.driver.find_element(By.XPATH, "//div[@id='divInfraBarraSistemaPadraoD']/div/div/a[@title='Unidade de Testes 1.1']")
    
    if( e is None ):
        self.driver.find_element(By.CSS_SELECTOR, ".d-none #lnkInfraUnidade").click()
        self.driver.find_element(By.XPATH, "//td[contains(.,\'Unidade de Testes 1.2\')]").click()
        time.sleep(1)
        self.driver.find_element(By.CSS_SELECTOR, ".d-none #lnkInfraUnidade").click()
        self.driver.find_element(By.XPATH, "//td[contains(.,\'Unidade de Testes 1.1\')]").click()
    
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//a[contains(text(),\'9999\')][1]")))
    self.driver.find_element(By.XPATH, "//a[contains(text(),\'9999\')][1]").click()
    for i in range(0, 5):
      self.driver.switch_to.frame(0)
      WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//span[contains(text(),\'9999\')][1]")))
      self.driver.find_element(By.XPATH, "//span[contains(text(),\'9999\')][1]").click()
      WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//span[contains(text(),\'9999\')][1]")))
      time.sleep(1)
      self.driver.switch_to.default_content()
      self.driver.switch_to.frame(1)
      WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//img[contains(@title,'Duplicar Processo')]")))
      self.driver.find_element(By.XPATH, "//img[contains(@title,'Duplicar Processo')]").click()
      WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "btnDuplicarProcesso")))
      self.driver.find_element(By.ID, "btnDuplicarProcesso").click()
      self.driver.switch_to.default_content()
    print("fim")
    print("fim2")