# Generated by Selenium IDE
import pytest
import os
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test0310SEIGDPendenciasArq():
  def setup_method(self, method):
    if ("LOCAL" == os.environ["SELENIUMTEST_MODALIDADE"]):
        self.driver = webdriver.Chrome()
    else:
        self.driver = webdriver.Remote(command_executor=os.environ["SELENIUMTEST_SELENIUMHOST_URL"], desired_capabilities=DesiredCapabilities.CHROME)
    
    if ((not 'maximizar_screen' in os.environ) or os.environ['maximizar_screen'] == 'true'):
        self.driver.maximize_window()
    
    self.driver.implicitly_wait(10)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_0310ConcluirArquivar(self):
    self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    self.driver.find_element(By.ID, "txtUsuario").send_keys("teste")
    self.driver.find_element(By.ID, "pwdSenha").send_keys("teste")
    self.driver.find_element(By.ID, "Acessar").click()
    WebDriverWait(self.driver, 10).until(expected_conditions.element_to_be_clickable((By.XPATH, "//div[@id='divInfraBarraSistemaPadrao']//div//div/a[@id='lnkInfraUnidade']")))
    self.driver.find_element(By.XPATH, "//div[@id='divInfraBarraSistemaPadrao']//div//div/a[@id='lnkInfraUnidade']").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.XPATH, '//input[@title="TESTE"]/..')))
    self.driver.find_element(By.XPATH, '//input[@title="TESTE"]/..').click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.XPATH, "//div[@id='divInfraBarraSistemaPadrao']//div//div/a[@id='lnkInfraUnidade' and contains(., 'TESTE')]")))
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//span[contains(.,'Administração')]/..")))
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Controle de Processos")))
    self.driver.find_element(By.LINK_TEXT, "Controle de Processos").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Controle de Processos")))
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//span[contains(.,'Administração')]/..")))
    self.driver.find_element(By.LINK_TEXT, "Controle de Processos").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "imgGeradosCheck")))
    self.driver.find_element(By.ID, "imgGeradosCheck").click()
    self.driver.find_element(By.XPATH, "//img[@title='Concluir Processo nesta Unidade']").click()
    self.driver.find_element(By.LINK_TEXT, "Pendências de Arquivamento").click()
    self.driver.find_element(By.ID, "imgInfraCheck").click()
    self.driver.find_element(By.ID, "sbmArquivar").click()
    dropdown = self.driver.find_element(By.ID, "selJustificativa")
    dropdown.find_element(By.XPATH, "//option[. = 'Justificativa de Arquivamento 02']").click()
    self.driver.find_element(By.ID, "selJustificativa").click()
    dropdown = self.driver.find_element(By.ID, "selCargoFuncao")
    dropdown.find_element(By.XPATH, "//option[. = 'Assessor(a)']").click()
    self.driver.find_element(By.ID, "selCargoFuncao").click()
    self.driver.find_element(By.ID, "pwdSenha").click()
    self.driver.find_element(By.ID, "pwdSenha").send_keys("teste")
    self.driver.find_element(By.ID, "sbmSalvar").click()
    time.sleep(10)
    WebDriverWait(self.driver, 180000).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".infraCaption")))
    WebDriverWait(self.driver, 180).until(expected_conditions.visibility_of_element_located((By.ID, "divInfraBarraLocalizacao")))
    assert self.driver.find_element(By.ID, "divInfraBarraLocalizacao").text == "Pendências de Arquivamento"
  
  # def test_0320VerificarPrazosUnidadeTeste(self):
  #   self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
  #   self.driver.find_element(By.ID, "txtUsuario").send_keys("teste")
  #   self.driver.find_element(By.ID, "pwdSenha").send_keys("teste")
  #   self.driver.find_element(By.ID, "Acessar").click()
  #   self.driver.find_element(By.LINK_TEXT, "Arquivo da Unidade").click()
  #   WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//td[contains(.,\'2 anos, 0 meses\')]")))
  #   WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//td[contains(.,\'4 anos, 0 meses\')]")))
  
  # def test_0330VerificarPrazosUnidadeArquivo(self):
  #   self.driver.get(os.environ["SELENIUMTEST_SISTEMA_URL"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["SELENIUMTEST_SISTEMA_ORGAO"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
  #   self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivista01")
  #   self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivista01")
  #   self.driver.find_element(By.ID, "Acessar").click()
  #   self.driver.find_element(By.LINK_TEXT, "Arquivo da Unidade").click()
  #   WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//td[contains(.,\'2 anos\')]")))
  #   elements = self.driver.find_elements(By.XPATH, "//td[contains(.,\'0 anos, 11 meses\')]")
  #   assert len(elements) > 0
  #   elements = self.driver.find_elements(By.XPATH, "//td[contains(.,\'2 anos, 11 meses\')]")
  #   assert len(elements) > 0
  #   elements = self.driver.find_elements(By.XPATH, "//td[contains(.,\'10 anos\')]")
  #   assert len(elements) > 0
  
