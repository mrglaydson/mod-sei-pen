# Generated by Selenium IDE
import pytest
import os
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test00ConfigSIP():
  def setup_method(self, method):
    if ("LOCAL" == os.environ["local_do_teste"]):
        self.driver = webdriver.Chrome()
    else:
        self.driver = webdriver.Remote(command_executor='http://seleniumhub:4444/wd/hub', desired_capabilities=DesiredCapabilities.CHROME)
    self.driver.implicitly_wait(5)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_sIPCriarMontarUnidades(self):
    # Test name: SIP-CriarMontarUnidades
    # Step # | name | target | value
    # 1 | open | /sip/login.php?sigla_orgao_sistema="+os.environ["selOrgao"]+"&sigla_sistema=SIP | 
    self.driver.get(os.environ["base_url"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["selOrgao"]+"&sigla_sistema=SIP")
    # 2 | store | ABC | orgaoSistema
    # 3 | type | id=txtUsuario | teste
    self.driver.find_element(By.ID, "txtUsuario").send_keys("teste")
    # 4 | click | id=pwdSenha | 
    self.driver.find_element(By.ID, "pwdSenha").click()
    # 5 | type | id=pwdSenha | teste
    self.driver.find_element(By.ID, "pwdSenha").send_keys("teste")
    # 6 | click | id=Acessar | 
    self.driver.find_element(By.ID, "Acessar").click()
    # 7 | click | xpath=//*[text()="Unidades"] | 
    self.driver.find_element(By.XPATH, "//*[text()=\"Unidades\"]").click()
    # 8 | click | linkText=Nova | 
    self.driver.find_element(By.LINK_TEXT, "Nova").click()
    # 9 | select | id=selOrgao | label=${orgaoSistema}
    dropdown = self.driver.find_element(By.ID, "selOrgao")
    dropdown.find_element(By.XPATH, "//option[. = '"+os.environ["selOrgao"]+"']").click()
    # 10 | click | id=selOrgao | 
    self.driver.find_element(By.ID, "selOrgao").click()
    # 11 | waitForElementEditable | id=txtSigla | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.element_to_be_clickable((By.ID, "txtSigla")))
    # 12 | click | id=txtSigla | 
    self.driver.find_element(By.ID, "txtSigla").click()
    # 13 | store | ArquivoGeral02 | unidade
    self.vars["unidade"] = "ArquivoGeral02"
    # 14 | type | id=txtSigla | ${unidade}
    self.driver.find_element(By.ID, "txtSigla").send_keys(self.vars["unidade"])
    # 15 | click | id=txtDescricao | 
    self.driver.find_element(By.ID, "txtDescricao").click()
    # 16 | type | id=txtDescricao | ${unidade}
    self.driver.find_element(By.ID, "txtDescricao").send_keys(self.vars["unidade"])
    # 17 | click | name=sbmCadastrarUnidade | 
    self.driver.find_element(By.NAME, "sbmCadastrarUnidade").click()
    # 18 | click | xpath=//*[text()="Hierarquias"] | 
    self.driver.find_element(By.XPATH, "//*[text()=\"Hierarquias\"]").click()
    # 19 | click | linkText=Montar | 
    self.driver.find_element(By.LINK_TEXT, "Montar").click()
    # 20 | select | id=selHierarquia | label=SEI
    dropdown = self.driver.find_element(By.ID, "selHierarquia")
    dropdown.find_element(By.XPATH, "//option[. = 'SEI']").click()
    # 21 | click | id=selHierarquia | 
    self.driver.find_element(By.ID, "selHierarquia").click()
    # 22 | click | id=btnNova | 
    self.driver.find_element(By.ID, "btnNova").click()
    # 23 | select | id=selUnidade | label=${unidade}
    dropdown = self.driver.find_element(By.ID, "selUnidade")
    dropdown.find_element(By.XPATH, "//option[. = '{}']".format(self.vars["unidade"])).click()
    # 24 | click | id=selUnidade | 
    self.driver.find_element(By.ID, "selUnidade").click()
    # 25 | click | id=txtDataInicio | 
    self.driver.find_element(By.ID, "txtDataInicio").click()
    # 26 | type | id=txtDataInicio | 01/01/2019
    self.driver.find_element(By.ID, "txtDataInicio").send_keys("01/01/2019")
    # 27 | click | name=sbmCadastrarHierarquiaUnidade | 
    self.driver.find_element(By.NAME, "sbmCadastrarHierarquiaUnidade").click()
  
