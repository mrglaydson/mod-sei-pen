# Generated by Selenium IDE
import pytest
import os
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test1900Relacionado():

  def setup_method(self, method):
    if ("LOCAL" == os.environ["local_do_teste"]):
        self.driver = webdriver.Chrome()
    else:
        self.driver = webdriver.Remote(command_executor='http://seleniumhub:4444/wd/hub', desired_capabilities=DesiredCapabilities.CHROME)
    self.driver.maximize_window()
    self.driver.implicitly_wait(5)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_cadastrarProcessosarrecadacao(self,):
    # Test name: CadastrarProcessos_arrecadacao
    # Step # | name | target | value
    # 1 | open | /sip/login.php?sigla_orgao_sistema="+os.environ["selOrgao"]+"&sigla_sistema=SEI&infra_url=L3NlaS8= | 
    self.driver.get(os.environ["base_url"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["selOrgao"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    # 2 | waitForElementVisible | id=txtUsuario | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "txtUsuario")))
    # 3 | click | id=txtUsuario | 
    self.driver.find_element(By.ID, "txtUsuario").click()
    # 4 | type | id=txtUsuario | arquivistaorg2
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivistaorg2")
    # 5 | waitForElementVisible | id=pwdSenha | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "pwdSenha")))
    # 6 | click | id=pwdSenha | 
    self.driver.find_element(By.ID, "pwdSenha").click()
    # 7 | type | id=pwdSenha | arquivistaorg2
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivistaorg2")
    # 8 | click | id=selOrgao | 
    self.driver.find_element(By.ID, "selOrgao").click()
    # 9 | select | id=selOrgao | label=Org2
    dropdown = self.driver.find_element(By.ID, "selOrgao")
    dropdown.find_element(By.XPATH, "//option[. = 'Org2']").click()
    # 10 | click | id=Acessar | 
    self.driver.find_element(By.ID, "Acessar").click()
    # 11 | waitForElementVisible | linkText=Iniciar Processo | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Iniciar Processo")))
    # 12 | click | linkText=Iniciar Processo | 
    self.driver.find_element(By.LINK_TEXT, "Iniciar Processo").click()
    # 13 | click | id=imgExibirTiposProcedimento | 
    self.driver.find_element(By.ID, "imgExibirTiposProcedimento").click()
    # 14 | storeXpathCount | xpath=//a[contains(text(), 'Arrecadação: Receita')] | error
    self.vars["error"] = len(self.driver.find_elements(By.XPATH, "//a[contains(text(), \'Arrecadação: Receita\')]"))
    # 15 | if | ${error}==0 | 
    if self.driver.execute_script("return (arguments[0]==0)", self.vars["error"]):
      # 16 | click | id=imgExibirTiposProcedimento | 
      self.driver.find_element(By.ID, "imgExibirTiposProcedimento").click()
      # 17 | end |  | 
    # 18 | click | linkText=Arrecadação: Receita | 
    self.driver.find_element(By.LINK_TEXT, "Arrecadação: Receita").click()
    # 19 | type | id=txtDescricao | teste arquivo
    self.driver.find_element(By.ID, "txtDescricao").send_keys("teste arquivo")
    # 20 | click | css=#divOptPublico .infraRadioLabel | 
    self.driver.find_element(By.CSS_SELECTOR, "#divOptPublico .infraRadioLabel").click()
    # 21 | click | css=#divInfraBarraComandosInferior > #btnSalvar > .infraTeclaAtalho | 
    self.driver.find_element(By.CSS_SELECTOR, "#divInfraBarraComandosInferior > #btnSalvar > .infraTeclaAtalho").click()
    # 22 | selectFrame | index=1 | 
    self.driver.switch_to.frame(1)
    # 23 | waitForElementVisible | xpath=//img[@alt='Incluir Documento'] | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//img[@alt=\'Incluir Documento\']")))
    # 24 | click | xpath=//img[@alt='Incluir Documento'] | 
    self.driver.find_element(By.XPATH, "//img[@alt=\'Incluir Documento\']").click()
    # 25 | waitForElementVisible | linkText=Despacho | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Despacho")))
    # 26 | click | linkText=Despacho | 
    self.driver.find_element(By.LINK_TEXT, "Despacho").click()
    # 27 | waitForElementVisible | css=#divOptPublico .infraRadioLabel | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#divOptPublico .infraRadioLabel")))
    # 28 | click | css=#divOptPublico .infraRadioLabel | 
    self.driver.find_element(By.CSS_SELECTOR, "#divOptPublico .infraRadioLabel").click()
    # 29 | click | id=btnSalvar | 
    self.vars["window_handles"] = self.driver.window_handles
    # 30 | storeWindowHandle | root | 
    self.driver.find_element(By.ID, "btnSalvar").click()
    # 31 | selectWindow | handle=${win3408} | 
    self.vars["win3408"] = self.wait_for_window(10000)
    # 32 | close |  | 
    self.vars["root"] = self.driver.current_window_handle
    # 33 | selectWindow | handle=${root} | 
    self.driver.switch_to.window(self.vars["win3408"])
    # 34 | selectFrame | index=0 | 
    self.driver.close()
    # 35 | selectFrame | relative=parent | 
    self.driver.switch_to.window(self.vars["root"])
    # 36 | selectFrame | index=1 | 
    self.driver.switch_to.frame(0)
    # 37 | selectWindow | handle=${root} | 
    self.driver.switch_to.default_content()
    # 38 | selectFrame | index=0 | 
    self.driver.switch_to.frame(1)
    # 39 | selectFrame | relative=parent | 
    self.driver.switch_to.window(self.vars["root"])
    # 40 | selectFrame | index=0 | 
    self.driver.switch_to.frame(0)
    # 41 | click | xpath=//span | 
    self.driver.switch_to.default_content()
    # 42 | storeText | xpath=//span | protocolo
    self.driver.switch_to.frame(0)
    # 43 | selectFrame | relative=parent | 
    self.driver.find_element(By.XPATH, "//span").click()
    # 44 | selectFrame | index=1 | 
    global protocolo
    protocolo = self.driver.find_element(By.XPATH, "//span").text
    # 45 | //waitForElementVisible | xpath=//img[@alt='Concluir e Arquivar Processo'] | 30000
    self.driver.switch_to.default_content()
    self.driver.switch_to.frame(1)
  
  def test_cadastrarProcessosacessoinf(self):
    # Test name: CadastrarProcessos_acessoinf
    # Step # | name | target | value
    # 1 | open | /sip/login.php?sigla_orgao_sistema="+os.environ["selOrgao"]+"&sigla_sistema=SEI&infra_url=L3NlaS8= | 
    self.driver.get(os.environ["base_url"]+"/sip/login.php?sigla_orgao_sistema="+os.environ["selOrgao"]+"&sigla_sistema=SEI&infra_url=L3NlaS8=")
    # 2 | waitForElementVisible | id=txtUsuario | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "txtUsuario")))
    # 3 | click | id=txtUsuario | 
    self.driver.find_element(By.ID, "txtUsuario").click()
    # 4 | type | id=txtUsuario | arquivistaorg2
    self.driver.find_element(By.ID, "txtUsuario").send_keys("arquivistaorg2")
    # 5 | waitForElementVisible | id=pwdSenha | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.ID, "pwdSenha")))
    # 6 | click | id=pwdSenha | 
    self.driver.find_element(By.ID, "pwdSenha").click()
    # 7 | type | id=pwdSenha | arquivistaorg2
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivistaorg2")
    # 8 | click | id=selOrgao | 
    self.driver.find_element(By.ID, "selOrgao").click()
    # 9 | select | id=selOrgao | label=Org2
    dropdown = self.driver.find_element(By.ID, "selOrgao")
    dropdown.find_element(By.XPATH, "//option[. = 'Org2']").click()
    # 10 | click | id=Acessar | 
    self.driver.find_element(By.ID, "Acessar").click()
    # 11 | waitForElementVisible | linkText=Iniciar Processo | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Iniciar Processo")))
    # 12 | click | linkText=Iniciar Processo | 
    self.driver.find_element(By.LINK_TEXT, "Iniciar Processo").click()
    # 13 | click | id=imgExibirTiposProcedimento | 
    self.driver.find_element(By.ID, "imgExibirTiposProcedimento").click()
    # 14 | storeXpathCount | xpath=//a[contains(text(), 'Acesso à Informação: Demanda do e-SIC')] | error
    self.vars["error"] = len(self.driver.find_elements(By.XPATH, "//a[contains(text(), \'Acesso à Informação: Demanda do e-SIC\')]"))
    # 15 | if | ${error}==0 | 
    if self.driver.execute_script("return (arguments[0]==0)", self.vars["error"]):
      # 16 | click | id=imgExibirTiposProcedimento | 
      self.driver.find_element(By.ID, "imgExibirTiposProcedimento").click()
      # 17 | end |  | 
    # 18 | click | linkText=Acesso à Informação: Demanda do e-SIC | 
    self.driver.find_element(By.LINK_TEXT, "Acesso à Informação: Demanda do e-SIC").click()
    # 19 | type | id=txtDescricao | teste arquivo
    self.driver.find_element(By.ID, "txtDescricao").send_keys("teste arquivo")
    # 20 | click | css=#divOptPublico .infraRadioLabel | 
    self.driver.find_element(By.CSS_SELECTOR, "#divOptPublico .infraRadioLabel").click()
    # 21 | click | css=#divInfraBarraComandosInferior > #btnSalvar > .infraTeclaAtalho | 
    self.driver.find_element(By.CSS_SELECTOR, "#divInfraBarraComandosInferior > #btnSalvar > .infraTeclaAtalho").click()
    # 22 | selectFrame | index=1 | 
    self.driver.switch_to.frame(1)
    # 23 | waitForElementVisible | xpath=//img[@alt='Incluir Documento'] | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//img[@alt=\'Incluir Documento\']")))
    # 24 | click | xpath=//img[@alt='Incluir Documento'] | 
    self.driver.find_element(By.XPATH, "//img[@alt=\'Incluir Documento\']").click()
    # 25 | waitForElementVisible | linkText=Despacho | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, "Despacho")))
    # 26 | click | linkText=Despacho | 
    self.driver.find_element(By.LINK_TEXT, "Despacho").click()
    # 27 | waitForElementVisible | css=#divOptPublico .infraRadioLabel | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#divOptPublico .infraRadioLabel")))
    # 28 | click | css=#divOptPublico .infraRadioLabel | 
    self.driver.find_element(By.CSS_SELECTOR, "#divOptPublico .infraRadioLabel").click()
    # 29 | click | id=btnSalvar | 
    self.vars["window_handles"] = self.driver.window_handles
    # 30 | storeWindowHandle | root | 
    self.driver.find_element(By.ID, "btnSalvar").click()
    # 31 | selectWindow | handle=${win3408} | 
    self.vars["win3408"] = self.wait_for_window(10000)
    # 32 | close |  | 
    self.vars["root"] = self.driver.current_window_handle
    # 33 | selectWindow | handle=${root} | 
    self.driver.switch_to.window(self.vars["win3408"])
    # 34 | selectFrame | index=0 | 
    self.driver.close()
    # 35 | selectFrame | relative=parent | 
    self.driver.switch_to.window(self.vars["root"])
    # 36 | selectFrame | index=1 | 
    self.driver.switch_to.frame(0)
    # 37 | selectWindow | handle=${root} | 
    self.driver.switch_to.default_content()
    # 38 | selectFrame | index=0 | 
    self.driver.switch_to.frame(1)
    # 39 | selectFrame | relative=parent | 
    self.driver.switch_to.window(self.vars["root"])
    # 40 | selectFrame | index=0 | 
    self.driver.switch_to.frame(0)
    # 41 | click | xpath=//span | 
    self.driver.switch_to.default_content()
    # 42 | selectFrame | relative=parent | 
    self.driver.switch_to.frame(0)
    # 43 | selectFrame | index=1 | 
    self.driver.find_element(By.XPATH, "//span").click()
    # 44 | waitForElementVisible | xpath=//img[@alt='Relacionamentos do Processo'] | 30000
    self.driver.switch_to.default_content()
    # 45 | click | xpath=//img[@alt='Relacionamentos do Processo'] | 
    self.driver.switch_to.frame(1)
    # 46 | type | id=txtProtocolo | ${protocolo}
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//img[@alt=\'Relacionamentos do Processo\']")))
    # 47 | click | id=btnPesquisar | 
    self.driver.find_element(By.XPATH, "//img[@alt=\'Relacionamentos do Processo\']").click()
    # 48 | pause | 5000 | 
    self.driver.find_element(By.ID, "txtProtocolo").send_keys(protocolo)
    # 49 | click | id=sbmAdicionar | 
    self.driver.find_element(By.ID, "btnPesquisar").click()
    # 50 | pause | 5000 | 
    time.sleep(5)
    # 51 | selectFrame | relative=parent | 
    self.driver.find_element(By.ID, "sbmAdicionar").click()
    # 52 | selectFrame | index=0 | 
    time.sleep(5)
    # 53 | click | xpath=//span | 
    self.driver.switch_to.default_content()
    # 54 | selectFrame | relative=parent | 
    self.driver.switch_to.frame(0)
    # 55 | selectFrame | index=1 | 
    self.driver.find_element(By.XPATH, "//span").click()
    # 56 | waitForElementVisible | xpath=//img[@alt='Concluir e Arquivar Processo'] | 30000
    self.driver.switch_to.default_content()
    # 57 | click | xpath=//img[@alt='Concluir e Arquivar Processo'] | 
    self.driver.switch_to.frame(1)
    # 58 | click | id=selJustificativa | 
    WebDriverWait(self.driver, 30).until(expected_conditions.visibility_of_element_located((By.XPATH, "//img[@alt=\'Concluir e Arquivar Processo\']")))
    # 59 | select | id=selJustificativa | label=Justificativa de Arquivamento 01
    self.driver.find_element(By.XPATH, "//img[@alt=\'Concluir e Arquivar Processo\']").click()
    # 60 | click | id=selCargoFuncao | 
    self.driver.find_element(By.ID, "selJustificativa").click()
    # 61 | select | id=selCargoFuncao | label=Assessor(a)
    dropdown = self.driver.find_element(By.ID, "selJustificativa")
    dropdown.find_element(By.XPATH, "//option[. = 'Justificativa de Arquivamento 01']").click()
    # 62 | click | id=pwdSenha | 
    self.driver.find_element(By.ID, "selCargoFuncao").click()
    # 63 | type | id=pwdSenha | arquivistaorg2
    dropdown = self.driver.find_element(By.ID, "selCargoFuncao")
    dropdown.find_element(By.XPATH, "//option[. = 'Assessor(a)']").click()
    # 64 | click | id=sbmSalvar | 
    self.driver.find_element(By.ID, "pwdSenha").click()
    # 65 | pause | 5000 | 
    self.driver.find_element(By.ID, "pwdSenha").send_keys("arquivistaorg2")
    # 66 | //selectWindow | handle=${win1700} | 
    self.vars["window_handles"] = self.driver.window_handles
    # 67 | //close |  | 
    self.driver.find_element(By.ID, "sbmSalvar").click()
    # 68 | selectWindow | handle=${root} | 
    self.vars["win1700"] = self.wait_for_window(5000)
    # 69 | click | linkText=Menu | 
    time.sleep(5)
    # 72 | //click | linkText=Menu | 
    self.driver.switch_to.window(self.vars["root"])
    # 73 | //end |  | 
    self.driver.find_element(By.LINK_TEXT, "Menu").click()
    self.driver.find_element(By.LINK_TEXT, "Arquivo da Unidade").click()
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, "td:nth-child(8)")))
    elements = self.driver.find_elements(By.XPATH, "//td[contains(.,\'1 ano, 0 meses e 0 dias.\')]")
    assert len(elements) > 0
  
